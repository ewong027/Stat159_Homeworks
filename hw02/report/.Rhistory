require(ggplot)
require(ggplot2)
ggplot(advertising, aes(TV, Sales))+
geom_smooth(method = "lm", se = FALSE) +
geom_point(shape = 16, col = '#99ccff')+
geom_segment(aes(xend = TV, yend = pre), alpha = 0.5)+
theme_bw()
advertising <- read.csv('data/Advertising.csv', header = TRUE)
setwd("~/")
setwd("~/Desktop/stat159-fall2016-hw02")
advertising <- read.csv('data/Advertising.csv', header = TRUE)
ggplot(advertising, aes(TV, Sales))+
geom_smooth(method = "lm", se = FALSE) +
geom_point(shape = 16, col = '#99ccff')+
geom_segment(aes(xend = TV, yend = pre), alpha = 0.5)+
theme_bw()
ggplot(advertising, aes(TV, Sales))+
geom_smooth(method = "lm", se = FALSE) +
geom_point(shape = 16, col = '#99ccff')+
geom_segment(aes(xend = TV, yend = Sales), alpha = 0.5)+
theme_bw()
ggplot(advertising, aes(TV, Sales))+
geom_smooth(method = "lm", se = FALSE) +
geom_point(shape = 16, col = '#99ccff')+
geom_segment(aes(xend = TV, yend = Sales), alpha = 0.3)+
theme_bw()
estimate <- predict(regression)
regression <- lm(advertising$Sales ~ advertising$TV)
estimate <- predict(regression)
ggplot(advertising, aes(TV, Sales))+
geom_smooth(method = "lm", se = FALSE) +
geom_point(shape = 16, col = '#99ccff')+
geom_segment(aes(xend = TV, yend = estimate), alpha = 0.3)+
theme_bw()
ggplot(advertising, aes(TV, Sales))+
geom_smooth(method = "lm", se = FALSE, col = '#000000') +
geom_point(shape = 16, col = '#99ccff')+
geom_segment(aes(xend = TV, yend = estimate), alpha = 0.3)+
theme_bw()
ggplot(advertising, aes(TV, Sales))+
geom_smooth(method = "lm", se = FALSE, col = '#000000') +
geom_point(shape = 16, col = '#99ccff')+
geom_segment(aes(xend = TV, yend = estimate), alpha = 0.5)+
theme_bw()
ggplot(advertising, aes(TV, Sales))+
geom_smooth(method = "lm", se = FALSE, col = '#000000') +
geom_point(col = '#99ccff')+
geom_segment(aes(xend = TV, yend = estimate), alpha = 0.3)+
theme_bw()
ggplot(advertising, aes(TV, Sales))+
geom_smooth(method = "lm", se = FALSE, col = '#000000') +
geom_point(col = '#99ccff', alpha = 0.5)+
geom_segment(aes(xend = TV, yend = estimate), alpha = 0.3)+
theme_bw()
ggplot(advertising, aes(TV, Sales))+
geom_smooth(method = "lm", se = FALSE, col = '#000000') +
geom_point(col = '#99ccff', alpha = 0.75)+
geom_segment(aes(xend = TV, yend = estimate), alpha = 0.3)+
theme_bw()
ggplot(advertising, aes(TV, Sales))+
geom_smooth(method = "lm", se = FALSE, col = '#000000') +
geom_point(col = '#99ccff', alpha = 0.75)+
geom_segment(aes(xend = TV, yend = estimate), col = '#f04137', alpha = 0.3)+
theme_bw()
ggplot(advertising, aes(TV, Sales))+
geom_smooth(method = "lm", se = FALSE, col = '#000000') +
geom_point(col = '#99ccff')+
geom_segment(aes(xend = TV, yend = estimate), col = '#f04137', alpha = 0.3)+
theme_bw()
hist(as.numeric(advertising$TV), breaks = 20, col = '#07ffc7',
xlab = 'Advertising Budget (in thousands of dollars)',
ylab = 'Frequency',
main = 'Histogram of Frequency of TV Advertising Budgets',
ylim = c(0,30))
hist(as.numeric(advertising$TV), breaks = 20, col = '#07ffc7',
xlab = 'Advertising Budget (in thousands of dollars)',
ylab = 'Frequency',
main = 'Histogram of Frequency of TV Advertising Budgets',
ylim = c(0,20))
hist(as.numeric(advertising$Sales), breaks = 20, col = '#d9d8ff',
xlab = 'Sales (in thousands of units)',
ylab = 'Frequency',
main = 'Histogram of Frequency of Sales')
hist(as.numeric(advertising$Sales), breaks = 20, col = '#d9d8ff',
xlab = 'Sales (in thousands of units)',
ylab = 'Frequency',
main = 'Histogram of Frequency of Sales',
xlim = c(0,30),
ylim = c(0,25))
hist(as.numeric(advertising$Sales), breaks = 20, col = '#d9d8ff',
xlab = 'Sales (in thousands of units)',
ylab = 'Frequency',
main = 'Histogram of Frequency of Sales',
xlim = c(0,27),
ylim = c(0,25))
hist(as.numeric(advertising$Sales), breaks = 20, col = '#d9d8ff',
xlab = 'Sales (in thousands of units)',
ylab = 'Frequency',
main = 'Histogram of Frequency of Sales',
xlim = c(0,30),
ylim = c(0,25))
hist(as.numeric(advertising$Sales), breaks = 15, col = '#d9d8ff',
xlab = 'Sales (in thousands of units)',
ylab = 'Frequency',
main = 'Histogram of Frequency of Sales',
xlim = c(0,30),
ylim = c(0,25))
hist(as.numeric(advertising$Sales), breaks = 20, col = '#d9d8ff',
xlab = 'Sales (in thousands of units)',
ylab = 'Frequency',
main = 'Histogram of Frequency of Sales',
xlim = c(0,30),
ylim = c(0,25))
?xtable
library(xtable)
?xtable
print(tbl)
bl <- xtable(regression_summary,
caption = 'Information about Regression Coefficents',
digits = 2)
row.names(tbl) <- c('(Intercept)','TV')
load('../data/regression.RData')
setwd("~/Desktop/stat159-fall2016-hw02/report")
load('../data/regression.RData')
library(xtable)
tbl <- xtable(regression_summary,
caption = 'Information about Regression Coefficents',
digits = 2)
row.names(tbl) <- c('(Intercept)','TV')
print(tbl)
View(tbl)
Quantity <- c('RSS', 'R2', 'F-stat')
Value <- c(regression_summary$sigma,
regression_summary$adj.r.squared,
regression_summary$fstatistic[1])
more_info <- data.frame(Quantity, Value)
tbl2 <- xtable(more_info,
caption = 'Regression Quality Indices')
View(tbl2)
tbl2 <- xtable(c(more_info$Quantity, more_info$Value),
caption = 'Regression Quality Indices')
tbl2 <- xtable(more_info[1],
caption = 'Regression Quality Indices')
View(tbl2)
tbl2 <- xtable(more_info,
caption = 'Regression Quality Indices')
View(tbl2)
more_info <- as.matrix(Quantity, Value)
View(more_info)
more_info <- as.matrix(c(Quantity, Value))
View(more_info)
more_info <- data.frame(Quantity, Value)
tbl2[ ,2:3]
more_info[ , 2:3]
tbl <- xtable((head(mtcars)), caption = "Nice Table with xtable")
print(tbl
print(tbl0
print(tbl)
View(tbl)
more_info <- Value
tbl2 <- xtable(more_info,
caption = 'Regression Quality Indices')
more_info <- data.frame(more_info)
more_info <- data.frame(Value)
tbl2 <- xtable(more_info,
caption = 'Regression Quality Indices')
View(tbl2)
Value <- c(regression_summary$sigma,
regression_summary$adj.r.squared,
regression_summary$fstatistic[1])
more_info <- data.frame(Value)
tbl2 <- xtable(more_info,
caption = 'Regression Quality Indices')
row.names(tbl2) <- c('RSS', 'R2', 'F-stat')
print(tbl2)
Value <- c(regression_summary$sigma,
regression_summary$adj.r.squared,
regression_summary$fstatistic[1])
more_info <- data.frame(Value)
tbl2 <- xtable(more_info,
caption = 'Regression Quality Indices')
row.names(tbl2) <- c('RSS', 'R2', 'F-stat')
?xtable
Value <- c(regression_summary$sigma,
regression_summary$adj.r.squared,
regression_summary$fstatistic[1])
more_info <- data.frame(Value)
tbl2 <- xtable(more_info,
caption = 'Regression Quality Indices',
label = c('Quantity','Value'))
row.names(tbl2) <- c('RSS', 'R2', 'F-stat')
?indices
print(tbl2, caption.placement = 'top',
comment = getOption("xtable.comment", FALSE), indicies = FALSE)
Quantity <- c('RSS', 'R2', 'F-stat')
Value <- c(regression_summary$sigma,
regression_summary$adj.r.squared,
regression_summary$fstatistic[1])
more_info <- data.frame(Quantity, Value)
tbl2 <- xtable(more_info,
caption = 'Regression Quality Indices')
print(tbl2, caption.placement = 'top',
comment = getOption("xtable.comment", FALSE), indicies = FALSE)
?index
??index
? xtable index
?xtable index
tbl2[1]
tbl2[[1]]
tbl2 <- xtable(more_info[[c(1,2)]],
caption = 'Regression Quality Indices')
View(tbl2)
?data.frame
more_info <- table(Quantity, Value)
View(tbl2)
more_info <- data.frame(Quantity, Value)
more_info <- as.array(Quantity, Value)
more_info
more_info <- as.array(c(Quantity, Value))
more_info
more_info <- data.frame(Quantity, Value)
?xtable
more_info <- as.matrix(Quantity, Value)
tbl2 <- xtable(more_info,
caption = 'Regression Quality Indices')
Value <- c(regression_summary$sigma,
regression_summary$adj.r.squared,
regression_summary$fstatistic[1])
more_info <- data.frame(Quantity, Value)
tbl2 <- xtable(more_info,
caption = 'Regression Quality Indices')
tbl2[-1]
Quantity <- c('RSS', 'R2', 'F-stat')
Value <- c(regression_summary$sigma,
regression_summary$adj.r.squared,
regression_summary$fstatistic[1])
more_info <- data.frame(Quantity, Value)
tbl2 <- xtable(more_info,
caption = 'Regression Quality Indices')
row.names(tbl2) = NULL
View(tbl2)
row.names(tbl2) = c('','','')
row.names(tbl2) = c(' ','  ','   ')
View(tbl2)
row.names(tbl2) = FALSE
?row.names
?xtable
